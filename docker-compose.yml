services:
  db:
    image: postgres:17
    container_name: db-dev
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - minikanban_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 30s
      retries: 30


  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api-dev
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${API_PORT}:3000"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      API_PORT: ${API_PORT}
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - minikanban_net

  frontend:
    build:
      context: ./frontend 
      dockerfile: Dockerfile
    container_name: frontend-dev
    restart: always
    ports:
      - "${FRONTEND_PORT}:4200"
    volumes:
      - ./frontend:/usr/src/app 
      - /usr/src/app/node_modules
    networks:
      - minikanban_net

networks:
  minikanban_net:
    driver: bridge

volumes:
  postgres_data:
